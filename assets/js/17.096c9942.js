(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{385:function(t,s,a){"use strict";a.r(s);var n=a(43),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("h2",{attrs:{id:"变量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[t._v("#")]),t._v(" 变量类型")]),t._v(" "),a("ol",[a("li",[t._v("基础类型（值类型）\n"),a("ul",[a("li",[t._v("Boolean")]),t._v(" "),a("li",[t._v("String")]),t._v(" "),a("li",[t._v("Number")]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("Symbol (ES6)")]),t._v(" "),a("li",[t._v("BigInt (ES10)")])])]),t._v(" "),a("li",[t._v("引用类型\n"),a("ul",[a("li",[t._v("Object")])])])]),t._v(" "),a("p",[a("strong",[t._v("for...in、for...in 区别")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("for...in")]),t._v(" "),a("ul",[a("li",[t._v("用来遍历对象及其原型链上带有字符串 key 的属性;")]),t._v(" "),a("li",[t._v("遍历数组时，除了遍历元素外，还会遍历数组对象的自定义属性，故不推荐在数组中使用 "),a("code",[t._v("for...in")])])])]),t._v(" "),a("li",[a("code",[t._v("for...of")]),t._v(" "),a("ul",[a("li",[t._v("ES6引入循环遍历语法；")]),t._v(" "),a("li",[t._v("遍历的输出结果对应为 value;")]),t._v(" "),a("li",[t._v("支持数组遍历，类数组对象（DOM NodeList），字符串，Map、Set对象;")]),t._v(" "),a("li",[t._v("不支持遍历普通对象;")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* for...in */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'one'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'two'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 1 test")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* for...of */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 2")]),t._v("\n")])])]),a("h2",{attrs:{id:"变量存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量存储"}},[t._v("#")]),t._v(" 变量存储")]),t._v(" "),a("h3",{attrs:{id:"存储方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储方式"}},[t._v("#")]),t._v(" 存储方式")]),t._v(" "),a("ol",[a("li",[t._v("基础类型：保存在栈内存中；")]),t._v(" "),a("li",[t._v("引用类型：保存一个指针在栈内存中，这个指针指向的对象保存在堆内存中。")])]),t._v(" "),a("h3",{attrs:{id:"读取（赋值）方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取（赋值）方式"}},[t._v("#")]),t._v(" 读取（赋值）方式")]),t._v(" "),a("ol",[a("li",[t._v("基础类型：按值访问，读取（赋值）栈中实际保存的值；")]),t._v(" "),a("li",[t._v("引用类型：按引用反问，先从栈中读取堆内存的指针，然后读取（赋值）保存在堆内存中的值。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);