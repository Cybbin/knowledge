(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{351:function(e,t,v){"use strict";v.r(t);var o=v(43),_=Object(o.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"websocket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[e._v("#")]),e._v(" WebSocket")]),e._v(" "),v("p",[e._v("一种网络通信协议，解决 "),v("code",[e._v("HTTP")]),e._v(" 协议通信只能由客户端发起的缺陷，实现了客户端和服务端的全双工通信。")]),e._v(" "),v("p",[e._v("客户端主动获取服务端消息：")]),e._v(" "),v("ol",[v("li",[e._v("轮询：每个一段时间，客户端就发起一个询问，了解服务端有没有新的消息；")]),e._v(" "),v("li",[e._v("长轮询：客户端发送一个超时时间很长的请求，服务端 hold 住这个连接，在有新数据到达时再返回；")]),e._v(" "),v("li",[v("code",[e._v("WebSocket")]),e._v("。")])]),e._v(" "),v("hr"),e._v(" "),v("p",[v("code",[e._v("WebSocket")]),e._v(" 与 "),v("code",[e._v("HTTP")]),e._v(" 区别\n相同点：")]),e._v(" "),v("ol",[v("li",[e._v("都是基于 "),v("code",[e._v("TCP")]),e._v(" 协议，都是可靠性传输协议；")]),e._v(" "),v("li",[e._v("都属于应用层协议；\n不同点：\n"),v("code",[e._v("WebSocket")]),e._v(" 是双向通信协议，"),v("code",[e._v("HTTP")]),e._v(" 是单向的。\nhttps://user-gold-cdn.xitu.io/2017/5/15/9cb2a748556c4ce6decaddcf41e31ae9?imageView2/0/w/1280/h/960/format/webp/ignore-error/1")])]),e._v(" "),v("hr"),e._v(" "),v("p",[v("code",[e._v("WebSocket")]),e._v(" 握手\n基于 "),v("code",[e._v("HTTP")]),e._v(" 握手，是 "),v("code",[e._v("HTTP")]),e._v(" 请求的升级。")]),e._v(" "),v("ol",[v("li",[e._v("浏览器请求")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('GET /chat HTTP/1.1   //必需。\nHost: server.example.com  // 必需。WebSocket服务器主机名\nUpgrade: websocket // 必需。并且值为" websocket"。有个空格\nConnection: Upgrade // 必需。并且值为" Upgrade"。有个空格\nSec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ== // 必需。其值采用base64编码的随机16字节长的字符序列。\nOrigin: http://example.com //浏览器必填。头域（RFC6454）用于保护WebSocket服务器不被未授权的运行在浏览器的脚本跨源使用WebSocket API。\nSec-WebSocket-Protocol: chat, superchat //选填。可用选项有子协议选择器。\nSec-WebSocket-Version: 13 //必需。版本。\n')])])]),v("ol",{attrs:{start:"2"}},[v("li",[e._v("服务端响应")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("HTTP/1.1 101 Switching Protocols   //必需。响应头。状态码为101。任何非101的响应都为握手未完成。但是HTTP语义是存在的。\nUpgrade: websocket  // 必需。升级类型。\nConnection: Upgrade //必需。本次连接类型为升级。\nSec-WebSocket-Accept:s3pPLMBiTxaQ9kYGzzhZRbK+xOo=  //必需。表明服务器是否愿意接受连接。如果接受，值就必须是通过上面算法得到的值。\n")])])]),v("hr"),e._v(" "),v("p",[e._v("特点")]),e._v(" "),v("ol",[v("li",[e._v("建立在 "),v("code",[e._v("TCP")]),e._v(" 协议之上，服务端的实现比较容易；")]),e._v(" "),v("li",[e._v("与 "),v("code",[e._v("HTTP")]),e._v(" 协议有良好的兼容性，默认端口也是 "),v("code",[e._v("80")]),e._v(" 和 "),v("code",[e._v("443")]),e._v("，握手阶段通过 "),v("code",[e._v("HTTP")]),e._v(" 协议；")]),e._v(" "),v("li",[e._v("数据格式比较轻量，性能开销小，通行高效；")]),e._v(" "),v("li",[e._v("可以发送文本，也可以发送二进制数据；")]),e._v(" "),v("li",[e._v("没有同源限制；")]),e._v(" "),v("li",[e._v("标志符是 "),v("code",[e._v("ws")]),e._v(" （如果加密，则为 "),v("code",[e._v("wss")]),e._v("），服务器网址就是"),v("code",[e._v("URL")]),e._v("。\n"),v("ul",[v("li",[v("code",[e._v("ws://example.com:80/some/path")])])])])]),e._v(" "),v("p",[e._v("https://user-gold-cdn.xitu.io/2017/5/15/60014297b1ab2e908f9543f3fdb5003c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1")]),e._v(" "),v("h2",{attrs:{id:"鉴权，房间分配，心跳机制，重连方案等。"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#鉴权，房间分配，心跳机制，重连方案等。"}},[e._v("#")]),e._v(" 鉴权，房间分配，心跳机制，重连方案等。")])])}),[],!1,null,null,null);t.default=_.exports}}]);